<html>
	<head>
		<title>Flapper News</title>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js"></script>
		<script src="/javascripts/angularApp.js"></script>
		<style> .glyphicon-thumbs-up { cursor:pointer }</style>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.10/angular-ui-router.js"></script>
	</head>
	<body ng-app="flapperNews" >

		<div class-"row">
			<div class="col-md-6 col-md-offset-3">
				<ui-view></ui-view>
		<div>
			<!--{{test}}-->
		</div>
		<div>
			<!--{{post}}-->
		</div>

		<!--script type="text/ng-template" id="/posts.html">
		<div class="page-header">
			<h3>
				<a ng-show="post.link" href="{{post.link}}">
				{{post.title}}</a>
				<span ng-hide="post.link">
					{{post.title}}
				</span>
			</h3>
		</div>
		<div ng-repeat="comment in post.comments | orderBy:'-upvotes'">
			<span class="glyphicon glyphicon-thumbs-up"
				ng-click="incrementUpvotes(comment)"></span>
				{{comment.upvotes}} - by {{comment.author}}
				<span style="font-size:20px; margin-left:10px;">
					{{comment.body}}
				</span>
		</div>

</script-->

	</div>
</div>
	

		<script type="text/ng-template" id="/home.html">
			<div class="page-header">
				<h1>Flapper News in home</h1>
			</div>
            
            <div ng-repeat="post in posts | orderBy: '-upvotes'">
			<span class="glyphicon glyphicon-thumbs-up"ng-click="incrementUpvotes(post)"></span>
			{{post.upvotes}}
			<span style="font-size:20px; margin-left:10px;">
			<a ng-show="post.link" href="{{post.link}}"> {{post.title}}</a>
			<span ng-hide="post.link">{{post.title}}</span>
			</span>
            <span>
				<a href="#/posts/{{post._id}}">Comments</a>
			</span>
		</div>
            		<form ng-submit="addPost()"
			style="margin-top:30px;">
			<h3>Add a new post</h3>

			<div class = "form-group">
				<input type="text" class="form-control"placeholder="Title" ng-model="title"></input>
			</div>
			<div class="form-group">
			<input type="text" class="form-control"placeholder="Link" ng-model="link"></input>
			</div>
			<button type="submit" class="btn btn-primary">Post</button>
		</form>

		</script>
		<script type="text/ng-template" id="/posts.html">
			<div class="page-header">
				<h3>
					<a ng-show="post.link" href="{{post.link}}">
						{{post.title}}
					</a>
					<span ng-hide ="post.link">
						{{post.title}}
					</span> 
				</h3>
			</div>

			<div ng-repeat="comment in post.comments | orderBy:'-upvotes'">
				<span class="glyphicon glyphicon-thumbs-up" ng-click="incrementUpvotes(comment)"></span>
				{{comment.upvotes}} - by {{comment.author}}
				<span style="font-size:20px; margin-left:10px;">
					{{comment.body}}
				</span>
			</div>

			<form ng-submit="addComment()" style="margin-top:30px;">
				<h3>Add a new comment</h3>
				<div class="form-group">
					<input type="text" class="form-control" placeholder="Comment" ng-model="body"></input>
				</div>
				<button type="submit" class="btn btn-primary">Post</button>
			</form>
		</script>

			<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '628526733841066',
      xfbml      : true,
      version    : 'v2.3'
    });
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "//connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
</script>
<div
  class="fb-like"
  data-share="true"
  data-width="450"
  data-show-faces="true">
</div>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1658346341067364',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.3' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="status">
</div>

	</body>
</html>